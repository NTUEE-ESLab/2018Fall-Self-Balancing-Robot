C51 COMPILER V9.01   I2C                                                                   04/26/2018 19:19:43 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Output\I2C.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Common\I2C.c BROWSE INCDIR(.\Common;.\Driver;.\User) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listing\I2C.lst) OBJECT(.\Output\I2C.obj)

line level    source

   1          
   2          #include "i2c.h"
   3          
   4          //普通IO口模拟I2C通讯
   5          
   6          /***************************************************************
   7          ** 函数名称: Delay5us
   8          ** 功能描述: 延时5微秒(STC12C5A60S2@12M) 不同的工作环境,需要调整此函数
   9                                   此延时函数是使用1T的指令周期进行计算,与传统的12T的MCU不同
  10          ** 输　入:   
  11          ** 输　出:   
  12          ** 全局变量: 
  13          ***************************************************************/
  14          void Delay5us()
  15          {
  16   1          unsigned char n = 4;
  17   1      
  18   1          while (n--)
  19   1          {
  20   2              _nop_();
  21   2              _nop_();
  22   2          }
  23   1      }
  24          
  25          
  26          /***************************************************************
  27          ** 函数名称: I2C_Start
  28          ** 功能描述: I2C起始信号
  29          ** 输　入:   
  30          ** 输　出:   
  31          ** 全局变量: 
  32          ***************************************************************/
  33          void I2C_Start()
  34          {
  35   1          SDA = 1;                    //拉高数据线
  36   1          SCL = 1;                    //拉高时钟线
  37   1          Delay5us();                 //延时
  38   1          SDA = 0;                    //产生下降沿
  39   1          Delay5us();                 //延时
  40   1          SCL = 0;                    //拉低时钟线
  41   1      }
  42          
  43          
  44          /***************************************************************
  45          ** 函数名称: I2C_Stop
  46          ** 功能描述: I2C停止信号
  47          ** 输　入:   
  48          ** 输　出:   
  49          ** 全局变量: 
  50          ***************************************************************/
  51          void I2C_Stop()
  52          {
  53   1          SDA = 0;                    //拉低数据线
  54   1          SCL = 1;                    //拉高时钟线
C51 COMPILER V9.01   I2C                                                                   04/26/2018 19:19:43 PAGE 2   

  55   1          Delay5us();                 //延时
  56   1          SDA = 1;                    //产生上升沿
  57   1          Delay5us();                 //延时
  58   1      }
  59          
  60          
  61          /***************************************************************
  62          ** 函数名称: I2C_SendACK
  63          ** 功能描述: I2C发送应答信号
  64          ** 输　入:   ack (0:ACK 1:NAK)
  65          ** 输　出:   
  66          ** 全局变量: 
  67          ***************************************************************/
  68          void I2C_SendACK(bit ack)
  69          {
  70   1          SDA = ack;                  //写应答信号
  71   1          SCL = 1;                    //拉高时钟线
  72   1          Delay5us();                 //延时
  73   1          SCL = 0;                    //拉低时钟线
  74   1          Delay5us();                 //延时
  75   1      }
  76          
  77          
  78          /***************************************************************
  79          ** 函数名称: I2C_RecvACK
  80          ** 功能描述: I2C接收应答信号
  81          ** 输　入:   
  82          ** 输　出:   
  83          ** 全局变量: 
  84          ***************************************************************/
  85          bit I2C_RecvACK()
  86          {
  87   1          SCL = 1;                    //拉高时钟线
  88   1          Delay5us();                 //延时
  89   1          CY = SDA;                   //读应答信号
  90   1          SCL = 0;                    //拉低时钟线
  91   1          Delay5us();                 //延时
  92   1          return CY;
  93   1      }
  94          
  95          
  96          /***************************************************************
  97          ** 函数名称: I2C_SendByte
  98          ** 功能描述: 向I2C总线发送一个字节数据
  99          ** 输　入:   
 100          ** 输　出:   
 101          ** 全局变量: 
 102          ***************************************************************/
 103          void I2C_SendByte(unsigned char dat)
 104          {
 105   1          unsigned char i;
 106   1          for (i=0; i<8; i++)         //8位计数器
 107   1          {
 108   2              dat <<= 1;              //移出数据的最高位
 109   2              SDA = CY;               //送数据口
 110   2              SCL = 1;                //拉高时钟线
 111   2              Delay5us();             //延时
 112   2              SCL = 0;                //拉低时钟线
 113   2              Delay5us();             //延时
 114   2          }
 115   1          I2C_RecvACK();
 116   1      }
C51 COMPILER V9.01   I2C                                                                   04/26/2018 19:19:43 PAGE 3   

 117          
 118          /***************************************************************
 119          ** 函数名称: I2C_RecvByte
 120          ** 功能描述: 从I2C总线接收一个字节数据
 121          ** 输　入:   
 122          ** 输　出:   
 123          ** 全局变量: 
 124          ***************************************************************/
 125          unsigned char I2C_RecvByte()
 126          {
 127   1          unsigned i;
 128   1          unsigned char dat = 0;
 129   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 130   1          for (i=0; i<8; i++)         //8位计数器
 131   1          {
 132   2              dat <<= 1;
 133   2              SCL = 1;                //拉高时钟线
 134   2              Delay5us();             //延时
 135   2              dat |= SDA;             //读数据               
 136   2              SCL = 0;                //拉低时钟线
 137   2              Delay5us();             //延时
 138   2          }
 139   1          return dat;
 140   1      }
 141          
 142          
 143          /***************************************************************
 144          ** 函数名称: Single_WriteI2C
 145          ** 功能描述: 向I2C设备写入一个字节数据
 146          ** 输　入:   
 147          ** 输　出:   
 148          ** 全局变量: 
 149          ***************************************************************/
 150          void Single_WriteI2C(unsigned char REG_Address,unsigned char REG_data)
 151          {
 152   1          I2C_Start();                  //起始信号
 153   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 154   1          I2C_SendByte(REG_Address);    //内部寄存器地址
 155   1          I2C_SendByte(REG_data);       //内部寄存器数据
 156   1          I2C_Stop();                   //发送停止信号
 157   1      }
 158          
 159          
 160          /***************************************************************
 161          ** 函数名称: Single_ReadI2C
 162          ** 功能描述: 从I2C设备读取一个字节数据
 163          ** 输　入:   
 164          ** 输　出:   
 165          ** 全局变量: 
 166          ***************************************************************/
 167          unsigned char Single_ReadI2C(unsigned char REG_Address)
 168          {
 169   1              unsigned char REG_data;
 170   1              I2C_Start();                   //起始信号
 171   1              I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 172   1              I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始      
 173   1              I2C_Start();                   //起始信号
 174   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 175   1              REG_data=I2C_RecvByte();       //读出寄存器数据
 176   1              I2C_SendACK(1);                //接收应答信号
 177   1              I2C_Stop();                    //停止信号
 178   1              return REG_data;
C51 COMPILER V9.01   I2C                                                                   04/26/2018 19:19:43 PAGE 4   

 179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    198    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
