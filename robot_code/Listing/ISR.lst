C51 COMPILER V9.01   ISR                                                                   04/26/2018 19:19:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN .\Output\ISR.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE User\ISR.c BROWSE INCDIR(.\Common;.\Driver;.\User) DEBUG OBJECTEXTEND PRINT
                    -(.\Listing\ISR.lst) OBJECT(.\Output\ISR.obj)

line level    source

   1          
   2          #include "includes.h"
   3          
   4          /***************************************************************
   5          ** 函数名称: Timer1_Update
   6          ** 功能描述: Timer1中断函数
   7          ** 输　入:   
   8          ** 输　出:   
   9          ** 全局变量: 
  10          ***************************************************************/
  11          void Timer1_Update(void) interrupt  3
  12          {
  13   1        
  14   1              TL1 = 0xE5;                 //重载初值 定时10ms
  15   1              TH1 = 0xBE;
  16   1              
  17   1              SampleInputVoltage();   
  18   1              AngleControl();                 
  19   1              SpeedControl();          
  20   1              MotorOutput();    
  21   1                      
  22   1      #if 0  /*调试用*/  
                 g_ucLEDCount++;
                 if(g_ucLEDCount >=100) //LED1灯1秒交替闪烁
                 {
                       g_ucLEDCount=0;
                       LED3=~LED3;
                 }
              #endif
  30   1         
  31   1      #if 0  /*调试用 预编译命令*/
                 OutData[0] = g_fCarAngle;
                 OutData[1] = g_fGravityAngle;
                 OutData[2] = g_fGyroAngleSpeed ;
                 OutData[3] = g_iAccelInputVoltage_Y_Axis;
                 
                 OutPut_Data();
              #endif  
  39   1      }
  40          
  41          void Timer0_Update(void) interrupt  1
  42          {
  43   1          
  44   1              g_ucSpeedCountCarry++;
  45   1              LED2=~LED2;
  46   1      }
  47          
  48          
  49          
  50          /***************************************************************
  51          ** 函数名称: GetLeftMotorPulse
  52          ** 功能描述: 左电机脉冲捕捉函数
  53          ** 输　入:   
  54          ** 输　出:   
C51 COMPILER V9.01   ISR                                                                   04/26/2018 19:19:44 PAGE 2   

  55          ** 全局变量: 
  56          ***************************************************************/
  57          
  58          void GetLeftMotorPulse(void) interrupt 2
  59          {
  60   1      #if 0
                 if(LeftMotorDirection == 1)                  //1 
                 {
                    g_liLeftMotorPulse++;  //A脉冲低电平则B脉冲加一
                    //LED0=~LED0;
                 }     
                 else 
                 {
                    g_liLeftMotorPulse--; 
                    //LED0=~LED0;
                 }
              #else
  72   1                g_liLeftMotorPulse++;
  73   1                LED0=~LED0;
  74   1      #endif  
  75   1      } 
  76          
  77          
  78          /***************************************************************
  79          ** 函数名称: GetRightMotorPulse
  80          ** 功能描述: 右电机脉冲捕捉函数
  81          ** 输　入:   
  82          ** 输　出:   
  83          ** 全局变量: 
  84          ***************************************************************/
  85          /*
  86          void GetRightMotorPulse(void) interrupt 0
  87          {
  88          #if 0
  89             if(RightMotorDirection == 0)            //0
  90             {
  91                g_liRightMotorPulse++;    //A脉冲低电平则B脉冲加一
  92                          //LED2=~LED2;
  93             }
  94             else 
  95             {
  96                g_liRightMotorPulse--;
  97                          //LED2=~LED2;
  98             }
  99          #else
 100                          g_liRightMotorPulse++;
 101                          //LED2=~LED2;
 102          #endif
 103          }
 104          */                                               


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
